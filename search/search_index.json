{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sequential Tools MCP Server","text":"<p>A Model Context Protocol (MCP) server for sequential storytelling and sequential thinking as mnemonic techniques for problem-solving.</p>"},{"location":"#overview","title":"Overview","text":"<p>This project offers two complementary MCP tools for structuring complex problems:</p> <ol> <li> <p>Sequential Story - A narrative-based approach to sequential thinking. Instead of tracking abstract thoughts, it structures problems as story elements with characters, settings, and plot developments to make them more memorable and engaging.</p> </li> <li> <p>Sequential Thinking - A flexible analytical tool for breaking down complex problems through a chain of thoughts that can be revised, branched, and built upon as understanding deepens.</p> </li> </ol> <p>Both approaches leverage the power of sequencing and structure to enhance memory retention and problem understanding.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#sequential-story","title":"Sequential Story","text":"<ul> <li>Build problem solutions as narrative sequences</li> <li>Revise and branch story elements as needed</li> <li>Track characters, settings, tones, and plot points</li> <li>Formatted, color-coded display of story elements</li> </ul>"},{"location":"#sequential-thinking","title":"Sequential Thinking","text":"<ul> <li>Structure problems as a sequence of thoughts</li> <li>Revise or branch thinking paths as needed</li> <li>Generate and verify solution hypotheses</li> <li>Track thinking process completion</li> </ul>"},{"location":"#common-features","title":"Common Features","text":"<ul> <li>Formatted, color-coded display of elements</li> <li>Full MCP protocol support for integration with AI systems</li> <li>Support for branching and revision</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code># Clone the repository\ngit clone https://github.com/dhkts1/sequentialStory\ncd sequential-story\n\n# Install just the base dependencies using uv\nuv venv\nsource .venv/bin/activate\nuv sync\n\n# Install with development dependencies\nuv sync --group dev\n\n# Or install in development mode\nuv pip install -e .\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#running-the-server","title":"Running the server","text":"<pre><code># Run directly using the main script\npython main.py\n</code></pre>"},{"location":"#installing-with-mcp","title":"Installing with MCP","text":"<pre><code># Install in the Claude desktop app\nmcp install -e . -n \"Sequential Tools Server\" main.py:server\n\n# For development with the MCP Inspector\nmcp dev main.py:server\n</code></pre>"},{"location":"#example-story-element","title":"Example story element","text":"<pre><code>{\n  \"element\": \"Our protagonist, a data scientist named Alex, encounters a mysterious pattern in the customer behavior data.\",\n  \"elementNumber\": 1,\n  \"totalElements\": 5,\n  \"nextElementNeeded\": true,\n  \"character\": \"Alex (data scientist)\",\n  \"setting\": \"Data analysis lab\",\n  \"tone\": \"Mysterious\",\n  \"plotPoint\": \"Discovery of pattern\"\n}\n</code></pre>"},{"location":"#example-thought-element","title":"Example thought element","text":"<pre><code>{\n  \"thought\": \"The problem requires analyzing multiple data sources to identify correlations between customer behavior and sales patterns.\",\n  \"thoughtNumber\": 1,\n  \"totalThoughts\": 5,\n  \"nextThoughtNeeded\": true\n}\n</code></pre>"},{"location":"#development","title":"Development","text":"<pre><code># Install pre-commit hooks\nuv run pre-commit install\n\n# Run all pre-commit checks\npoe pre\n</code></pre>"},{"location":"#credits","title":"Credits","text":"<p>This project builds on the concepts of sequential thinking and structured problem-solving, adapting these approaches to both analytical and narrative frameworks for enhanced memory and problem-solving.</p> <p>The Sequential Thinking implementation is inspired by the JavaScript implementation from the Model Context Protocol repositories: https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking</p>"}]}